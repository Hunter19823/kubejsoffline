plugins {
	id "com.github.johnrengelman.shadow" version "7.1.2"
}

architectury {
    common(rootProject.enabled_platforms.split(","))
}

loom {
    accessWidenerPath = file("src/main/resources/${mod_id}.accesswidener")
}

configurations {
	shadowImplementation.extendsFrom implementation
}

dependencies {
	implementation 'org.junit.jupiter:junit-jupiter:5.8.1'

	// We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    // Remove the next line if you don't want to depend on the API
    modApi "dev.architectury:architectury:${rootProject.architectury_version}"
	modImplementation("dev.latvian.mods:kubejs:${kubejs_version}")

	shadowImplementation "org.reflections:reflections:${project.reflections_version}"
}


shadowJar {
	exclude "javax/"
	exclude "org/slf4j/"
	exclude "org/opentest4j/"
	exclude "org/junit/"
	exclude "org/apiguardian/"
	configurations = [
			project.configurations.shadowImplementation
	]
	classifier "dev-shadow"

//	relocate "org.reflections", "${project.group}.kubejsoffline.reflections"
//	relocate "javassist", "${project.group}.kubejsoffline.javassist"
}

remapJar {
	input.set shadowJar.archiveFile
	dependsOn shadowJar
	classifier null
}

sourcesJar {
	dependsOn remapJar
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	from remapJar.archiveFile.map { zipTree(it) }
}

jar {
	classifier "dev"
}



tasks.withType(Test) {
	useJUnitPlatform()
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = rootProject.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
